
$Id: INSTALL,v 1.6 1998/11/10 01:00:48 jimg Exp $

Building the DAP library:

1) Type `./configure' at the system prompt. On some systems you may have to
type `sh configure'.

Ignore the warnings about not finding das.tab.h and dds.tab.h, ...; they
don't exist until bison builds them.

2) Type `make' to build the library, `make check' to build the test
software. NB: you must have the GNU automated testing software DejaGNU to run
the makefile's check target.

3) Type `make install' to install the DAP library.

Notes:

1) Older versions of Linux have an xdr.h include file that won't compile
   properly with g++. The error shows up when building software that calls
   xdr_destroy and the compiler complains that its being called with too many
   arguments. If this happens to you, take the xdr.h.linux file and put it in
   DODS_ROOT/include and rename it to xdr.h. In that include directory, only
   DODS software will be able to see the changed file (so you can be sure
   that other software that uses the original xdr.h will still build). Note
   that the changes are very minor and there should be no problem instlling
   xdr.h in /usr/include/rpc.

2) To build with program instrumentation use `--enable-debug=<level>' where
   <level> is 1 or 2. 

3) To build with memory leak checks use --enable-dbnew. You must have the
   freely available libraries libdbnew.a and libefence.a to make use of this
   option.

4) GCC 2.8.1 contains a bug which causes it to crash when compiling the DODS
   class String.XPlex with optimization. Compile the file Plex/String.XPlex
   with optimization off (-O0). Note that the Makefile should take care of
   this for you. 

The defaults for both debug and dbnew are to *not* include those
features. Thus, if you want to built a straight version of the libraries (and
test code), use `./configure'. If you want the extra features, use
`./configure --enable-dbnew --enable-debug=2'

Debugging aids in the DODS API:

DBG: simple program instrumentation -- see the file debug.h in
$(DODS_ROOT)/include for more information

DBG2: more elaborate program instrumentation -- by convention this is used
for output that is half a page or more, while DEBUG is used for single line
output.

dbnew: include -ldbnew and -lefence when linking. libdbnew.a contains
overloaded versions of new, new[] delete and delete[]. It also contains code
to `walk the malloc chain' and simple checks for out-of-bounds errors.

efence: a freely available bounds checker for dynamically allocated
memory. When used with dbnew, efence must be set to 8-byte alignment. efence
will find all over- or under-writes of dynamically allocated memory, but only
works on some machines.
