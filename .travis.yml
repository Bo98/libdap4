# -*- shell-script -*-
#
# Initial Travic-CI control file. 6.5.15 jhrg

language: cpp

compiler:
  - gcc
  - clang

# whitelist
branches:
  only:
    - master

# Use this to prepare the system to install prerequisites or
# dependencies
#
# Building on Ubuntu, we need uuid-dev, xml, curl When Travis-CI moves
# to Ubuntu 14 (from 12, as of 6/16/15) we can load bison using apt-get
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq --force-yes libxml2-dev uuid-dev libcurl4-openssl-dev

# Use this to install any prerequisites or dependencies necessary to
# run your build
#
install:
  - wget http://mirrors.kernel.org/gnu/bison/bison-3.0.tar.gz
  - tar -xzvf bison-3.0.tar.gz
  - (cd bison-3.0 && ./configure && make -j7 && sudo make install)
 
# Use this to prepare your build for testing e.g. copy database
# configurations, environment variables, etc.
#
# I set prefix and PATH even though it's not really needed.
before_script:
  - export prefix=$HOME/OPENDAP/build
  - export PATH=$prefix/bin:/usr/local/bin:$PATH
  - autoreconf --force --install --verbose
  - ./configure --prefix=$prefix

# All commands must exit with code 0 on success. Anything else is
# considered failure. Note that each line of 'script' is run, regardless
# of exit status (in the preceding sections, execution stops on the
# first error).
#
# NB: sudo make install failed for clang here, hence the use of
# --prefix (which we'll need anyway later when we build the bes) with
# configure above. This is an idiosyncrasy of Travis CI because of the
# way it installs clang.
script:
  - make -j7 && make -j7 check && make install

  
# Build a debian package and upload if the above worked
after_success:
  - ./build-deb-pkg.sh

# findout how to deploy...
#  - scp libdap_3.14.0-1.deb www.opendap.org:/home/sites/pub/binary/tmp

# after_failure:

# after_script:
