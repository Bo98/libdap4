
# expect/tcl code to test the expression parser and scanner
# jhrg
#
# $Log: test.r.exp,v $
# Revision 1.3  2005/05/23 16:03:04  jimg
# Tests now use the local copy of common-tests.exp.
#
# Revision 1.2  2001/08/24 17:46:24  jimg
# Resolved conflicts from the merge of release 3.2.6
#
# Revision 1.1.2.3  2001/07/28 01:12:28  jimg
# Updated to work with the new escaping code. Some of our tests assumed
# that dashes (-) were not OK in symbol names. However, changes in the
# DAP parsers along with changes in the escaping functions now make this
# possible.
#
# Revision 1.1.2.2  2001/07/11 05:36:24  jimg
# *** empty log message ***
#
# Revision 1.1.2.1  2001/06/23 00:52:32  jimg
# Added tests for `#' in IDs.
#

source common_tests.exp

global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_file' is the name of the das input file for this test.

set test_name test.r
set test_file test.8

# The variable test_equation is the equation to test.

set test_equation {"x%23y,y"}

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "The complete DDS:
Dataset {
    Int16 x%23y;
    UInt16 y;
    Int32 data%23i\[20\]\[10\];
    Float64 data%20name\[10\];
} data8;
The data:
Int16 x%23y = 32000;
UInt16 y = 64000;"

expr-test_start p ${srcdir}/${test_file} ${test_equation}

compare_stdout $test_out "projection with `#' in id name."


