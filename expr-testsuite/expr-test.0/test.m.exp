
# expect/tcl code to test the expression parser and scanner
# Test Grid decay when projecting only the map component. Note that
# the Grid decays to a simple array in this case.
#
# jhrg
#
# $Log: test.m.exp,v $
# Revision 1.2  1997/07/15 21:07:34  jimg
# *** empty log message ***
#
# Revision 1.1  1997/06/05 22:53:37  jimg
# *** empty log message ***
#

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_file' is the name of the das input file for this test.

set test_name test.m
set test_file test.5

# The variable test_equation is the equation to test.

set test_equation {g.length}
    

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "The complete DDS:
Dataset {
    Int32 i\\\[20\\\];
    Int32 j;
    String s;
    Grid {
     ARRAY:
        Float64 val\\\[length = 10\\\]\\\[width = 10\\\]\\\[height = 20\\\];
     MAPS:
        Float64 length\\\[10\\\];
        Float64 width\\\[10\\\];
        Float64 height\\\[20\\\];
    } g;
} test1;
HTTP/1.0 200 OK
Server: DODS/*
Content-type: application/octet-stream
Content-Description: dods_data

The data:
Float64 length\\\[10\\\] = {99.999, 99.999, 99.999, 99.999, 99.999, 99.999, 99.999, 99.999, 99.999, 99.999};"

expr-test_start p ${srcdir}${test_file} ${test_equation}

if [string match $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    fail "$test_name"
}


