1999-04-21  James Gallagher  <jimg@dcz.dods.org>

	* Small fix in prune_spaces(). This fixed a problem in the mexcdf
	client (and presumably other netcdf or matlab programs to).

1999-04-14  James Gallagher  <jimg@dcz.dods.org>

	* Fixed a bug in Connection::del_connect() where an assert tested
	false for a valid condition. It is OK for the conns[i] element to
	be NULL when this method is run.

	* Fixed a bug in Connect where the member _tv would be deleted
	without being first allocated when local files are accessed. This
	member is no longer needed (it was used by libwww 5.0).

1999-04-09  James Gallagher  <jimg@dcz.dods.org>

	* This release is a special ferret-only release. It is a stable
	alpha version of what will be DODS 3.0 once some more features are
	added. 

1999-03-24  James Gallagher  <jimg@dcz.dods.org>

	* Added support for the new Int16, UInt16 and Float32 types.

1999-03-22  James Gallagher  <jimg@dcz.dods.org>

	* Added the Int16, UInt16 and Float32 datatypes to attributes. See
	the tests numbered test.18--20.

1999-03-19  James Gallagher  <jimg@dcz.dods.org>

	* Added a call to setprecision(15) in geturl. This makes it so
	that floating point numbers will print with the full range or
	precision. It might be that I have to move this when 32 bit floats
	are added because they have lower precision (8). However, setting
	the precision at this level (once, before the calls to print_val()
	start) is probably more efficient.

1999-03-17  James Gallagher  <jimg@dcz.dods.org>

	* Changed cgi_util.cc:find_ancillary_file() so that it looks for
	<pathname>.ext in addition to <basename>.ext and the other
	variations. This means that the current convention of naming
	ancillary DAS files <filename>.das will work for both the
	DODS_Date(), etc., functions (whose Factory classes were using
	this convention) and the regular DAS filter program. 

1999-02-24  James Gallagher  <jimg@dcz.dods.org>

	* An interim revision changed the way incoming data documents were
	processed so that the DDS contained in the data document did not
	have to copied to a separate file before being processed. However,
	this broken programs that read data docs with a pipe. This problem
	has been fixed. The document's DDS still is not copied, but
	programs like asciival that read from stdin via a pipe now work.

1999-01-21  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added the Grid Selection function. Grid variable may now be
	`selected' based on the values of the Map vectors (since this a
	constraint that returns data based on those data's values, I'm
	calling it a selection operation). The syntax looks like:
	grid(<grid var name>, <expression 0>, <expr 1>, ..., <expr n>). An
	example: grid(dsp_band_1, "29.7 < lat <= 34.8", "lon > -70.9", "
	-60 < lon"). This deliberately shows different forms the
	`expressions' can take. Note that these expressions can only name
	the grid's map vectors; they are not general expressions. Also
	note that the function appears in the projection part of a CE.

1999-01-15  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Changed the way the expression and DDS parsers work. Now the
	expression scanner/parser can process strings directly. This means
	that expression parsing is cleaner, somewhat faster and more
	reliable since a temporary file is no longer created as part of
	the parse process. Similarly, the DDS parser no longer requires
	that a temporary file be created to parse the DDS bound to a data
	document. 

1998-11-23  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed a bug in DAS where the destructor would free memory that
	was just garbage. I replaced the old genclass-based DASVHMap code
	with an SLList of structs.

1998-11-11  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixes for various memory leaks found while working on the FF
	server.

1998-11-05  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed error messages for CEs involving arrays. When an array
	name was misspelled in a CE you got no error message, now you do.

1998-10-21  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added projection functions to the CE syntax. These functions are
	executed *during* the parse of the projection clause. They can be
	used to add new (synthetic) variables to the DDS.

1998-10-14  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* expr.y: Added parse of single array indeces to the projection
	list in a CE. i[3] asks for the fourth element of the array i. The
	old syntax i[3:3] still works.

1998-09-17  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* The release (version 2.18) is the last that will use String.h.
	  WRONG! 11/11/98 jhrg
	
1998-09-03  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Feature: CEs no longer require fully-qualified names for fileds
	of ctor types.

	* Makefile.in (clean): Added GNU to the list of directories
	cleaned. This prevents sending out .o files with the source code.

1998-04-07  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed Connect: leading spaces in a URL and/or CE caused either a
	crash or other problem.

1998-04-03  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added patches from Jake Hamby which fix various problems with
	Sequences. 

1998-03-27  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added targets for test coverage analysis.

	* Added fix from Jake Hamby.

	* Makefile.in (GNUHDRS): Added String.h & String.cc to the
	distributions. 

1998-03-19  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added error messages when array indices are out of range.

	* Fixed yesterday's fix... Error objects are no longer compressed.
	I moved compression into DDS::send (from DODSFilter::send_data)
	and structured send() so that the mime header generators no longer
	use a hack to write themselves without compression. Previously
	set_mime_*() used to `write past' the compressor process and this
	caused synchronization problems - which I tried to fix yesterday.
	Now the headers are written and then the compressor is opened. 

1998-03-18  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed an ugly bug where Error objects were compressed (sometimes
	they still are) but the return MIME document header didn't say so.
	Now the return document header says if the Error object is
	compressed. Note that compressing Error objects is not going to
	save any (real) space but once the compressing data sink is set up
	*whatever* gets written to it will be compressed...

1998-03-17  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added the ASCII filter to the set of things that comprise a DODS
	server. Use .ascii or .asc as a URL suffix to get comma-separated
	ASCII data back from a DODS server.

	* Added boolean member functions is_simple_type(),
	is_vector_type() and is_constructor_type(). This reduce the size
	of various parts of the code (but I have not gone through and
	replaced all the old code yet).

	* Added some new mfuncs to the core. element_count() returns the
	number of elements in a constructor type (one for a simple type).

1998-03-09  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Removed the -fno-rtti flag from the DAP library build. The
	library needs RTTI so that software written using exceptions can
	catch derived exception classes.

1998-02-11  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added the DODS_Cache.pm class (which was in the hdf-dods server
	code only). This Perl module is not installed as part of the
	default stuff in DODS_ROOT/etc.

	* Added support for compression. Servers recognize the
	Accept-Encoding header in a request document. when the value of
	that header is `deflate' the zlib LZW algorithm is used to
	compress data. Clients automatically respond to document that
	contain the header Content-Encoding: deflate by un compressing the
	data (a new feature of libwww 5.1). The new servers are compatible
	with old clients and the new clients are compatible with old
	servers (although neither combination can use compression).

	* Added a help option to the servers (via an addition in
	DODS_Dispatch.pm). Use this with the `file name' /help or the
	extension .help.

Tue Dec 16 00:32:31 1997  James Gallagher  <jimg@localhost>

	* Added DODS_Dispatch.pm perl class. This class centralizes a lot
	of the code that used to be replicated in each of the perl scripts
	used to dispatch the various `methods' of a DODS server.

Mon Dec 15 17:26:37 1997  James Gallagher  <jimg@localhost>

	* Many small bug fixes that were fixed before being added to the
	TODO list.

	* Added DataDDS class which makes the version number read by
	Connect available to any member function that can access a DDS
	pointer (since DDS *s can reference DataDDS objects).

	* Added the DODSFilter class to simplify writing servers that
	conform to a set of standards Re: the placement and naming of
	ancillary files, version numbers, etc.

	* Added new Sequence processing code along with backward
	compatibility. Nested sequences are sent more efficiently. In
	addition, sequences may be followed by other variables in a Data
	object (an old bug).

	* Added new characters to those allowed in DDS NAME lexeme. This
	means that a file with _ and . in the name will parse.

Wed Aug 20 14:12:54 1997  James Gallagher  <jimg@localhost>

	* Added newline after data in process_data() in geturl.cc.

Thu Jun  5 16:08:10 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* See TODO for a list of reported bugs fixed and outstanding.

	* Changed the way request_data works so that Connect can now be
	used to create clients that read not only from the network but
	also from standard input.

	* Wrote DODS_Dispatch.pm Perl `class' that can be used to write
	the nph-* dispatch scripts. This should simplify maintenance of
	those scripts since they was a lot of replication of code from one
	script to another. Now must of the real functionality is
	concentrated in the one file.

	* When projections on Grids result in an object that is no longer
	a `true' Grid (no longer satisfies Grid::check_semantics()) then
	send the resulting variables as a Structure of Arrays or a simple
	array (the latter if only one array remains after applying the
	projection to the Grid.

	* Changed the way servers report the version number of the core
	software. The message is now generated by the *_dods data filter
	program using its -v option (all the data filter programs
	support this option). This gets rid of the dods-core-version perl
	script. 

	* Changed geturl so that it can read from stdin (similar to
	writeval). 

	* Fixed bugs in util.cc.

Wed May 21 22:25:41 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* See the TODO list for information on bugs found and fixed.

	* Added DAS aliases and hierarchies.

Sun Mar 23 17:01:12 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed the nasty decompression bug where child process exit
	status was never caught. This caused process tables to fill, etc.

Thu Mar  6 21:14:38 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* See TODO list for bugs fixed.

Sun Feb  9 18:40:25 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* See TODO for a list of bugs fixed.

Thu Feb  6 16:17:06 1997  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Changed the return type of request_data() from DDS & to DDS *.
	Also changed the return types of append_constraint() and
	constraint_dds() from DDS & to DDS *. When request_data()
	encounters an error it no longer exits; now it returns NULL.

Wed Dec 18 11:18:05 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Version 2.10 prepared

Wed Dec 11 20:15:10 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Created the Usage server.

	* Fixed bugs in cgi_util.cc - error Content-Description items were
	not processed.

Tue Dec  3 09:43:02 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added to DDS::parse_constraint() two new variables: ostream os
	and bool server. These are used to control processing of error
	messages that are returned from the CE parser. Rather than have
	the CE parser write all its error messages to stderr, the parser
	now returns an error object. The new code in parse_constraint()
	ensures that an `error' header is written to OS and that the error
	object is serialized if the member function is run from within a
	server. Since parse_constraint() is called from within
	DDS::send(), users of the library don't need to do anything
	different unless they have coded their own versions of send().

	* Added code to ensure that variables can be used in the selection
	part of a constraint expression without having to be also in the
	projection part. This means that a CE can be used to request a
	single variable (e.g., the sequence `s') but select by comparing
	to other variables in the data set.

Mon Dec  2 11:50:29 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added three new versions of int_ops to process all the possible
	permutations of signed and unsigned integer operands. Ignore the
	warnings in util.cc about comparisons between signed and unsigned.

	* Added cases for unsigned integer variables in the Vector, Byte,
	Int and Float classes. Also added cases in BaseType and some of
	the Test* classes. This fixes problems with the processing of
	this type.

Wed Nov 27 11:02:44 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added DDS as a third argument to the user-defined functions in
	the CE evaluator. This means that a function (which may be server
	specific) may look at the value of any variable in the dataset,
	not just those values passed as parameters. This will facilitate
	creation of functions which use implicit relations between
	variables when computing values or performing selections (e.g.,
	when geo-location information depends on the implicit relation
	between two or more arrays).

	* Changed the way Makefile dependencies are processed so that
	Makefile (re)generation is faster (since dependencies rarely
	change). 

Sun Nov 24 19:45:22 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Tested the library code in a number of situations and fixed many
	little bugs.

	* The asynchronous mode for data transfers is broken and is never
	used. 

	* Significantly improved processing of errors - web errors are now
	handled correctly for the DAS and DDS - alas the data will still
	exit when an error is encountered. Note that to fix this problem
	I'll need to use exceptions *or* change the return type of the
	request_data() member function to DDS * (from DDS &). Either one
	will break everyone's code...

	* Fixed the lame-looking progress indicator.

	* dods_root is no longer a global variable that depends on run
	time initialization from g++; now it is a function. This ensures
	that the core software can be linked to program core using linkers
	other than g++.

	* Added better compressor function - look at jg_dods.cc to see how
	it is used.

	* Fixed broken decompression.

Wed Nov 13 10:43:56 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added error MIME headers to the set that can be generated by
	helper functions in cgi_util.cc. The error headers are necessary
	since DODS now must generate all its own MIME headers (see the
	section on NPH CGIs in the CGI spec). MIME error headers should be
	used when an http or www error has been detected - don't use the
	DODS error objects in those cases.

	* Made changes in the Int data types so that expressions with
	UInt32s should work. 

	* Fixed some problems with the GUI. It should work more reliably
	but I doubt that all the problems have been fixed. Needs testing.

	* Now reports most www/http errors, although some clients still
	can't seem to get the GUI to work (e.g., writeval) even though
	geturl can.

	* Now requires version 5.0a of the WWW Library.

	* Many changes based on feedback from the initial version 2.09
	distribution. 

Tue Oct 29 08:23:30 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added UInt32 (32 bit unsigned integers) to the DAP. This
	includes both using them in the DDS and the DAS. When an UInt32 is
	used as an operand in a CE, the other operand is cast to unsigned
	for the comparison operation.

Fri Oct 18 09:35:07 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed various errors in the new Unsigned int classes.

	* Changed the operation of Connect::request_das() and
	request_dds(). They now pass any initial constraint along to the
	respective servers. An initial constraint is one which is supplied
	along with the URL at the time the Connect object is made.

	* The functions set_mine_{text,binary} now produce complete
	HTTP/MIME headers. Thus DODS servers can now be invoked using the
	`nph' feature of CGI 1.1 (done by naming the DODS server dispatch
	script `nph-*'). This solve two problems which appeared with large
	data transfers: Transfers were cut-off before completion when a
	server-determined timeout period elapsed and 2) Some large
	transmissions had an extra byte added into the data stream.

Tue Oct  8 09:23:57 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Modified geturl so that CEs can be passed in using ? in the URL
	in addition to the program's -c option.

	* Added `%' to the set of characters allowable in identifiers.

	* Added code so that a constraint expression appended to a URL is
 	properly handled. The CE is stored in in the Connect object. When
	a CE is passed to the request_data member function, Connect
	correctly combines the projection and selection parts of that CE
	with the matching parts of any initial CE. 

	* Fixed up the grammar files for Bison 1.25

Thu Sep 12 14:05:49 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added a new option to geturl; -D which can be used to get data. 

	* Fixed Array::print_array; used indirectly by the new option to
	geturl. 

Mon Aug 26 13:18:21 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed various configure.in files so that the different size ints
	are defined properly.

	* Fixed up the config_dap.h problem in the jg-dods directory.

	* Added classes for 32 bit floats, 32 bit unsigned ints and 16 bit
	signed and unsigned ints. These are *not* built by default - I'll
	let the various users have a chance to include these new classes in
	their software before they are added to the build (and thus must
	be sub-classed by users of the DAP).

Fri Aug 16 09:34:00 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed configure tests for sem.h prototypes and the semctl union.
	A new test which scans the sem.h header is in aclocal.m4 (in etc)
	and the configure script uses that test.

Tue Aug 13 10:54:02 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed bugs in Grid: bad constraint expressions would cause core
	dumps and a bug on the SGI (maybe others) where valid Grids would
	not parse.

	* Added to the Error class so that its methods are more useful
	for correcting errors and displaying messages (see Error.cc).

	* Switched to parser_arg object on all the parsers. parser_arg is
	a simple object used to pass values to and from the bison gnerated
	parsers. You need bison 1.24 or newer.

	* Added _unused_ to config_dap.h; this macro expands to gcc's
	__attribute__((__unused__)) thing. I then tacked `__unused__' on the
	char rcsid[] arrays to suppress warnings from gcc -Wall (and
	highlite the warnings that should be fixed!)

	* Fixed a bug in Clause where non-existent functions were
	evaluated - this caused a core dump.

Fri Aug  9 10:21:06 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Fixed bug in Connect where local accesses were not correctly
	detected. Also modified geturl to print a diagnostic when supplied
	with a local file name (or, more to the point, a name without
	`http'). 

Wed Jul 17 15:04:01 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Added expr-check target in Makefile.

	* Added new tests for das, dds objects. Added tests for expr-test
	driver. 

Mon Jul  8 16:25:11 1996  James Gallagher  <jimg@dcz.cvo.oneworld.com>

	* Gui.cc: Added compile-time switch HAVE_EXPECT which is used to
	control use/requirement of expect and tcl. When defined as 1 Expect
	and Tcl are used to communicate with a GUI subprocess. When 0,
	Expect and Tcl are not used (thus the libraries are not required).
	Note that without Expect the GUI used for the transmission
	progress indicator and error reporting is not available.

$Id: ChangeLog,v 1.37 1999/04/22 22:36:03 jimg Exp $
