# Process with autom4te to create an -*- Autotest -*- test suite.

AT_INIT([dmr-test])

AT_ARG_OPTION_ARG([generate-parse p],
    [-p arg, --generate-parse=arg   Build the baseline file for parser test 'arg'],
    [echo "./dmr-test -x -p $at_arg_generate_parse > $at_arg_generate_parse.baseline 2>&1";
     ./dmr-test -x -p $at_arg_generate_parse > $at_arg_generate_parse.baseline 2>&1;
     echo "Built baseline for $at_arg_generate_parse";
     exit],[])

AT_ARG_OPTION_ARG([generate-send s],
    [-s arg, --generate-send=arg   Build the baseline file for sender test 'arg'. 
                                   This depends on the 'name' attribute in the xml matching the filename root],
    [echo "./dmr-test -x -s $at_arg_generate_send > $at_arg_generate_send.send_base 2>&1";
     ./dmr-test -x -s $at_arg_generate_send > $at_arg_generate_send.send_base 2>&1;
     root_name=`basename $at_arg_generate_send .xml`;
     cp ${root_name}_data.bin dmr-testsuite/;
     echo "Built baseline for $at_arg_generate_send";
     exit],[])

# Usage DMR_PARSE $1 <test_input> $2 <pass/xfail>
# The baseline is assumed to be $1.baseline
m4_define([DMR_PARSE], [

    AT_SETUP([parse $1])
    AT_KEYWORDS([parse])
    
    input=$abs_srcdir/$1
    baseline=$input.baseline
    
    AT_CHECK([$abs_builddir/dmr-test -x -p $input || true], [], [stdout], [stderr])
    AT_CHECK([diff -b -B $baseline stdout || diff -b -B $baseline stderr], [], [ignore],[],[])
    AT_XFAIL_IF([test "$2" = "xfail"])
    
    AT_CLEANUP
])

m4_define([DMR_SEND], [
    # Test sending data (i.e., writing the Data DMR to a file
    AT_SETUP([send $1])
    AT_KEYWORDS([send])
    
    input=$abs_srcdir/$1
    baseline=$input.send_base

    AT_CHECK([$abs_builddir/dmr-test -x -s $input || true], [], [stdout], [stderr])
    AT_CHECK([diff -b -B $baseline stdout || diff -b -B $baseline stderr], [], [ignore],[],[])

    binary="`basename $input .xml`_data.bin"
    # Skip in 250 charactes to get past the MIME headers that include variable text
    # like the current date/time.
    AT_CHECK([cmp -s $abs_srcdir/$binary $abs_srcdir/dmr-testsuite/$binary 250 250])
    
    AT_XFAIL_IF([test "$3" = "xfail"])
    AT_CLEANUP
])

m4_define([DMR_TRANS], [
    # Test the parser
    # _DMR_TEST([x -t], [$abs_srcdir/dmr-testsuite/$1], [$abs_srcdir/dmr-testsuite/$1.trans_base], $2)
])

DMR_PARSE([dmr-testsuite/test_simple_1.xml], [pass])
DMR_PARSE([dmr-testsuite/test_simple_2.xml], [pass])
DMR_PARSE([dmr-testsuite/test_simple_3.xml], [pass])

DMR_PARSE([dmr-testsuite/test_simple_3_error_1.xml], [pass])
DMR_PARSE([dmr-testsuite/test_simple_3_error_2.xml], [pass])
DMR_PARSE([dmr-testsuite/test_simple_3_error_3.xml], [pass])

DMR_PARSE([dmr-testsuite/test_simple_4.xml], [pass])
DMR_PARSE([dmr-testsuite/test_simple_5.xml], [pass])

DMR_PARSE([dmr-testsuite/test_array_1.xml], [pass])
DMR_PARSE([dmr-testsuite/test_array_2.xml], [pass])
DMR_PARSE([dmr-testsuite/test_array_3.xml], [pass])
DMR_PARSE([dmr-testsuite/test_array_4.xml], [pass])
DMR_PARSE([dmr-testsuite/test_array_5.xml], [pass])

DMR_SEND([dmr-testsuite/test_simple_1.xml], [pass])
DMR_SEND([dmr-testsuite/test_simple_2.xml], [pass])
DMR_SEND([dmr-testsuite/test_simple_3.xml], [pass])
DMR_SEND([dmr-testsuite/test_simple_4.xml], [pass])
DMR_SEND([dmr-testsuite/test_simple_5.xml], [pass])

DMR_SEND([dmr-testsuite/test_array_1.xml], [pass])
DMR_SEND([dmr-testsuite/test_array_2.xml], [pass])
DMR_SEND([dmr-testsuite/test_array_3.xml], [pass])
DMR_SEND([dmr-testsuite/test_array_4.xml], [pass])
DMR_SEND([dmr-testsuite/test_array_5.xml], [pass])



