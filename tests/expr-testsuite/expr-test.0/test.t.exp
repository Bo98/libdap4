
# expect/tcl code to test the expression parser and scanner
# jhrg

source common_tests.exp

global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_file' is the name of the das input file for this test.

set test_name test.t
set test_file test.9

# The variable test_equation is the equation to test.

set test_equation {"Data-Set-2.fakeDim0\[0:3\],Data-Set-2.fakeDim1\[0:3\]"}

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "The complete DDS:
Dataset {
    Grid {
      Array:
        Float64 Data-Set-2\[fakeDim0 = 72\]\[fakeDim1 = 144\];
      Maps:
        Float64 fakeDim0\[72\];
        Float64 fakeDim1\[144\];
    } Data-Set-2;
} ftp%23data%23lim93%23msup%23L93rain.90daygrd_msu.hdf;
The data:
Structure {
    Float64 fakeDim0\[4\];
    Float64 fakeDim1\[4\];
} Data-Set-2 = { {99.999, 99.999, 99.999, 99.999}, {99.999, 99.999, 99.999, 99.999} };
"

expr-test_start p ${srcdir}/${test_file} ${test_equation} 

compare_stdout $test_out "projection with `%2d' in id name." 1

expr-test_start P ${srcdir}/${test_file} ${test_equation} 

compare_stdout $test_out "projection with `%2d' in id name." 1


