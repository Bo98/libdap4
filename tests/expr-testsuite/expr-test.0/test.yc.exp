
# expect/tcl code to test the expression parser and scanner. This test checks
# to see that the expr parser correctly rejects arrays that are partially
# constrained. 6/11/2002 jhrg

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_file' is the name of the das input file for this test.

set test_name test.yc
set test_file test.c

# The variable test_equation is the equation to test.

set test_equation {"i,f,a&f<0" -b}

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "The complete DDS:
Dataset {
    Sequence {
        Int32 i;
        Int32 j;
        Sequence {
            Float32 f;
            Float32 g;
            Sequence {
                Byte a;
                Byte b;
            } baby;
        } child;
    } parent;
} testc;
The data:
Sequence {
    Int32 i;
    Sequence {
        Float32 f;
        Sequence {
            Byte a;
        } baby;
    } child;
} parent = { { 32, { { -54.4, { { 0 }, { 1 }, { 2 }, { 3 } } }, { -1.77, { { 4 }, { 5 }, { 6 }, { 7 } } } } }, { 32768, { { -99.97, { { 36 }, { 37 }, { 38 }, { 39 } } }, { -86, { { 40 }, { 41 }, { 42 }, { 43 } } }, { -56.61, { { 44 }, { 45 }, { 46 }, { 47 } } } } }, { 1048576, { { -90.17, { { 48 }, { 49 }, { 50 }, { 51 } } } } } };"

expr-test_start p ${srcdir}/${test_file} ${test_equation}

if [string match $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    fail "$test_name"
}

# $Log: test.yc.exp,v $
# Revision 1.2  2005/01/28 17:25:13  jimg
# Resolved conflicts from merge with release-3-4-9
#
# Revision 1.1.2.1  2005/01/19 18:26:31  jimg
# Added
#