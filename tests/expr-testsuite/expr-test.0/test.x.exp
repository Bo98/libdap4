
# expect/tcl code to test the expression parser and scanner. This test checks
# to see that the expr parser correctly rejects arrays that are partially
# constrained. 6/11/2002 jhrg

global comp_output		# contains output from das-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_file' is the name of the das input file for this test.

set test_name test.x
set test_file test.b

# The variable test_equation is the equation to test.

set test_equation {"" -b}

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "The complete DDS:
Dataset {
    Sequence {
        Int32 i;
        Int32 j;
        Sequence {
            Float32 f;
            Float32 g;
        } child;
    } parent;
} testb;
The data:
Sequence {
    Int32 i;
    Int32 j;
    Sequence {
        Float32 f;
        Float32 g;
    } child;
} parent = { { 32, 32, { { -54.4, -54.4 }, { -1.77, -1.77 }, { 98.93, 98.93 }, { 92.68, 92.68 } } }, { 1024, 1024, { { 99.48, 99.48 }, { 81.67, 81.67 }, { 10.59, 10.59 }, { 91.29, 91.29 } } }, { 32768, 32768, { { 45.2, 45.2 }, { -99.97, -99.97 }, { -86, -86 }, { -56.61, -56.61 } } }, { 1048576, 1048576, { { -90.17, -90.17 }, { 99.38, 99.38 }, { 81.67, 81.67 }, { 10.59, 10.59 } } } };"

expr-test_start P ${srcdir}/${test_file} ${test_equation}

if [string match $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    fail "$test_name"
}

# $Log: test.x.exp,v $
# Revision 1.2  2005/01/28 17:25:13  jimg
# Resolved conflicts from merge with release-3-4-9
#
# Revision 1.1.2.1  2005/01/19 18:26:31  jimg
# Added
#