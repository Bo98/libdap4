Grammar

    0 $accept: constraint_expr $end

    1 constraint_expr: /* empty */
    2                | projection

    3 @1: /* empty */

    4 constraint_expr: '&' @1 selection
    5                | projection '&' selection

    6 projection: proj_clause
    7           | proj_clause ',' projection

    8 proj_clause: SCAN_WORD
    9            | proj_function
   10            | array_proj

   11 proj_function: SCAN_WORD '(' arg_list ')'

   12 selection: clause
   13          | selection '&' clause

   14 clause: r_value rel_op '{' r_value_list '}'
   15       | r_value rel_op r_value
   16       | bool_function

   17 bool_function: SCAN_WORD '(' arg_list ')'

   18 r_value: id_or_const
   19        | SCAN_WORD '(' arg_list ')'

   20 r_value_list: r_value
   21             | r_value_list ',' r_value

   22 arg_list: r_value_list
   23         | /* empty */

   24 id_or_const: SCAN_WORD
   25            | SCAN_STR

   26 array_proj: SCAN_WORD array_indices

   27 array_indices: array_index
   28              | array_indices array_index

   29 array_index: '[' SCAN_WORD ']'
   30            | '[' SCAN_WORD ':' SCAN_WORD ']'
   31            | '[' SCAN_WORD ':' SCAN_WORD ':' SCAN_WORD ']'

   32 rel_op: SCAN_EQUAL
   33       | SCAN_NOT_EQUAL
   34       | SCAN_GREATER
   35       | SCAN_GREATER_EQL
   36       | SCAN_LESS
   37       | SCAN_LESS_EQL
   38       | SCAN_REGEXP


Terminals, with rules where they appear

$end (0) 0
'&' (38) 4 5 13
'(' (40) 11 17 19
')' (41) 11 17 19
',' (44) 7 21
':' (58) 30 31
'[' (91) 29 30 31
']' (93) 29 30 31
'{' (123) 14
'}' (125) 14
error (256)
SCAN_STR (258) 25
SCAN_WORD (259) 8 11 17 19 24 26 29 30 31
SCAN_EQUAL (260) 32
SCAN_NOT_EQUAL (261) 33
SCAN_GREATER (262) 34
SCAN_GREATER_EQL (263) 35
SCAN_LESS (264) 36
SCAN_LESS_EQL (265) 37
SCAN_REGEXP (266) 38


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
constraint_expr (22)
    on left: 1 2 4 5, on right: 0
@1 (23)
    on left: 3, on right: 4
projection (24)
    on left: 6 7, on right: 2 5 7
proj_clause (25)
    on left: 8 9 10, on right: 6 7
proj_function (26)
    on left: 11, on right: 9
selection (27)
    on left: 12 13, on right: 4 5 13
clause (28)
    on left: 14 15 16, on right: 12 13
bool_function (29)
    on left: 17, on right: 16
r_value (30)
    on left: 18 19, on right: 14 15 20 21
r_value_list (31)
    on left: 20 21, on right: 14 21 22
arg_list (32)
    on left: 22 23, on right: 11 17 19
id_or_const (33)
    on left: 24 25, on right: 18
array_proj (34)
    on left: 26, on right: 10
array_indices (35)
    on left: 27 28, on right: 26 28
array_index (36)
    on left: 29 30 31, on right: 27 28
rel_op (37)
    on left: 32 33 34 35 36 37 38, on right: 14 15


state 0

    0 $accept: . constraint_expr $end

    SCAN_WORD  shift, and go to state 1
    '&'        shift, and go to state 2

    $default  reduce using rule 1 (constraint_expr)

    constraint_expr  go to state 3
    projection       go to state 4
    proj_clause      go to state 5
    proj_function    go to state 6
    array_proj       go to state 7


state 1

    8 proj_clause: SCAN_WORD .
   11 proj_function: SCAN_WORD . '(' arg_list ')'
   26 array_proj: SCAN_WORD . array_indices

    '('  shift, and go to state 8
    '['  shift, and go to state 9

    $default  reduce using rule 8 (proj_clause)

    array_indices  go to state 10
    array_index    go to state 11


state 2

    4 constraint_expr: '&' . @1 selection

    $default  reduce using rule 3 (@1)

    @1  go to state 12


state 3

    0 $accept: constraint_expr . $end

    $end  shift, and go to state 13


state 4

    2 constraint_expr: projection .
    5                | projection . '&' selection

    '&'  shift, and go to state 14

    $default  reduce using rule 2 (constraint_expr)


state 5

    6 projection: proj_clause .
    7           | proj_clause . ',' projection

    ','  shift, and go to state 15

    $default  reduce using rule 6 (projection)


state 6

    9 proj_clause: proj_function .

    $default  reduce using rule 9 (proj_clause)


state 7

   10 proj_clause: array_proj .

    $default  reduce using rule 10 (proj_clause)


state 8

   11 proj_function: SCAN_WORD '(' . arg_list ')'

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17

    $default  reduce using rule 23 (arg_list)

    r_value       go to state 18
    r_value_list  go to state 19
    arg_list      go to state 20
    id_or_const   go to state 21


state 9

   29 array_index: '[' . SCAN_WORD ']'
   30            | '[' . SCAN_WORD ':' SCAN_WORD ']'
   31            | '[' . SCAN_WORD ':' SCAN_WORD ':' SCAN_WORD ']'

    SCAN_WORD  shift, and go to state 22


state 10

   26 array_proj: SCAN_WORD array_indices .
   28 array_indices: array_indices . array_index

    '['  shift, and go to state 9

    $default  reduce using rule 26 (array_proj)

    array_index  go to state 23


state 11

   27 array_indices: array_index .

    $default  reduce using rule 27 (array_indices)


state 12

    4 constraint_expr: '&' @1 . selection

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 24

    selection      go to state 25
    clause         go to state 26
    bool_function  go to state 27
    r_value        go to state 28
    id_or_const    go to state 21


state 13

    0 $accept: constraint_expr $end .

    $default  accept


state 14

    5 constraint_expr: projection '&' . selection

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 24

    selection      go to state 29
    clause         go to state 26
    bool_function  go to state 27
    r_value        go to state 28
    id_or_const    go to state 21


state 15

    7 projection: proj_clause ',' . projection

    SCAN_WORD  shift, and go to state 1

    projection     go to state 30
    proj_clause    go to state 5
    proj_function  go to state 6
    array_proj     go to state 7


state 16

   25 id_or_const: SCAN_STR .

    $default  reduce using rule 25 (id_or_const)


state 17

   19 r_value: SCAN_WORD . '(' arg_list ')'
   24 id_or_const: SCAN_WORD .

    '('  shift, and go to state 31

    $default  reduce using rule 24 (id_or_const)


state 18

   20 r_value_list: r_value .

    $default  reduce using rule 20 (r_value_list)


state 19

   21 r_value_list: r_value_list . ',' r_value
   22 arg_list: r_value_list .

    ','  shift, and go to state 32

    $default  reduce using rule 22 (arg_list)


state 20

   11 proj_function: SCAN_WORD '(' arg_list . ')'

    ')'  shift, and go to state 33


state 21

   18 r_value: id_or_const .

    $default  reduce using rule 18 (r_value)


state 22

   29 array_index: '[' SCAN_WORD . ']'
   30            | '[' SCAN_WORD . ':' SCAN_WORD ']'
   31            | '[' SCAN_WORD . ':' SCAN_WORD ':' SCAN_WORD ']'

    ']'  shift, and go to state 34
    ':'  shift, and go to state 35


state 23

   28 array_indices: array_indices array_index .

    $default  reduce using rule 28 (array_indices)


state 24

   17 bool_function: SCAN_WORD . '(' arg_list ')'
   19 r_value: SCAN_WORD . '(' arg_list ')'
   24 id_or_const: SCAN_WORD .

    '('  shift, and go to state 36

    $default  reduce using rule 24 (id_or_const)


state 25

    4 constraint_expr: '&' @1 selection .
   13 selection: selection . '&' clause

    '&'  shift, and go to state 37

    $default  reduce using rule 4 (constraint_expr)


state 26

   12 selection: clause .

    $default  reduce using rule 12 (selection)


state 27

   16 clause: bool_function .

    $default  reduce using rule 16 (clause)


state 28

   14 clause: r_value . rel_op '{' r_value_list '}'
   15       | r_value . rel_op r_value

    SCAN_EQUAL        shift, and go to state 38
    SCAN_NOT_EQUAL    shift, and go to state 39
    SCAN_GREATER      shift, and go to state 40
    SCAN_GREATER_EQL  shift, and go to state 41
    SCAN_LESS         shift, and go to state 42
    SCAN_LESS_EQL     shift, and go to state 43
    SCAN_REGEXP       shift, and go to state 44

    rel_op  go to state 45


state 29

    5 constraint_expr: projection '&' selection .
   13 selection: selection . '&' clause

    '&'  shift, and go to state 37

    $default  reduce using rule 5 (constraint_expr)


state 30

    7 projection: proj_clause ',' projection .

    $default  reduce using rule 7 (projection)


state 31

   19 r_value: SCAN_WORD '(' . arg_list ')'

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17

    $default  reduce using rule 23 (arg_list)

    r_value       go to state 18
    r_value_list  go to state 19
    arg_list      go to state 46
    id_or_const   go to state 21


state 32

   21 r_value_list: r_value_list ',' . r_value

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17

    r_value      go to state 47
    id_or_const  go to state 21


state 33

   11 proj_function: SCAN_WORD '(' arg_list ')' .

    $default  reduce using rule 11 (proj_function)


state 34

   29 array_index: '[' SCAN_WORD ']' .

    $default  reduce using rule 29 (array_index)


state 35

   30 array_index: '[' SCAN_WORD ':' . SCAN_WORD ']'
   31            | '[' SCAN_WORD ':' . SCAN_WORD ':' SCAN_WORD ']'

    SCAN_WORD  shift, and go to state 48


state 36

   17 bool_function: SCAN_WORD '(' . arg_list ')'
   19 r_value: SCAN_WORD '(' . arg_list ')'

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17

    $default  reduce using rule 23 (arg_list)

    r_value       go to state 18
    r_value_list  go to state 19
    arg_list      go to state 49
    id_or_const   go to state 21


state 37

   13 selection: selection '&' . clause

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 24

    clause         go to state 50
    bool_function  go to state 27
    r_value        go to state 28
    id_or_const    go to state 21


state 38

   32 rel_op: SCAN_EQUAL .

    $default  reduce using rule 32 (rel_op)


state 39

   33 rel_op: SCAN_NOT_EQUAL .

    $default  reduce using rule 33 (rel_op)


state 40

   34 rel_op: SCAN_GREATER .

    $default  reduce using rule 34 (rel_op)


state 41

   35 rel_op: SCAN_GREATER_EQL .

    $default  reduce using rule 35 (rel_op)


state 42

   36 rel_op: SCAN_LESS .

    $default  reduce using rule 36 (rel_op)


state 43

   37 rel_op: SCAN_LESS_EQL .

    $default  reduce using rule 37 (rel_op)


state 44

   38 rel_op: SCAN_REGEXP .

    $default  reduce using rule 38 (rel_op)


state 45

   14 clause: r_value rel_op . '{' r_value_list '}'
   15       | r_value rel_op . r_value

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17
    '{'        shift, and go to state 51

    r_value      go to state 52
    id_or_const  go to state 21


state 46

   19 r_value: SCAN_WORD '(' arg_list . ')'

    ')'  shift, and go to state 53


state 47

   21 r_value_list: r_value_list ',' r_value .

    $default  reduce using rule 21 (r_value_list)


state 48

   30 array_index: '[' SCAN_WORD ':' SCAN_WORD . ']'
   31            | '[' SCAN_WORD ':' SCAN_WORD . ':' SCAN_WORD ']'

    ']'  shift, and go to state 54
    ':'  shift, and go to state 55


state 49

   17 bool_function: SCAN_WORD '(' arg_list . ')'
   19 r_value: SCAN_WORD '(' arg_list . ')'

    ')'  shift, and go to state 56


state 50

   13 selection: selection '&' clause .

    $default  reduce using rule 13 (selection)


state 51

   14 clause: r_value rel_op '{' . r_value_list '}'

    SCAN_STR   shift, and go to state 16
    SCAN_WORD  shift, and go to state 17

    r_value       go to state 18
    r_value_list  go to state 57
    id_or_const   go to state 21


state 52

   15 clause: r_value rel_op r_value .

    $default  reduce using rule 15 (clause)


state 53

   19 r_value: SCAN_WORD '(' arg_list ')' .

    $default  reduce using rule 19 (r_value)


state 54

   30 array_index: '[' SCAN_WORD ':' SCAN_WORD ']' .

    $default  reduce using rule 30 (array_index)


state 55

   31 array_index: '[' SCAN_WORD ':' SCAN_WORD ':' . SCAN_WORD ']'

    SCAN_WORD  shift, and go to state 58


state 56

   17 bool_function: SCAN_WORD '(' arg_list ')' .
   19 r_value: SCAN_WORD '(' arg_list ')' .

    $end      reduce using rule 17 (bool_function)
    '&'       reduce using rule 17 (bool_function)
    $default  reduce using rule 19 (r_value)


state 57

   14 clause: r_value rel_op '{' r_value_list . '}'
   21 r_value_list: r_value_list . ',' r_value

    ','  shift, and go to state 32
    '}'  shift, and go to state 59


state 58

   31 array_index: '[' SCAN_WORD ':' SCAN_WORD ':' SCAN_WORD . ']'

    ']'  shift, and go to state 60


state 59

   14 clause: r_value rel_op '{' r_value_list '}' .

    $default  reduce using rule 14 (clause)


state 60

   31 array_index: '[' SCAN_WORD ':' SCAN_WORD ':' SCAN_WORD ']' .

    $default  reduce using rule 31 (array_index)
