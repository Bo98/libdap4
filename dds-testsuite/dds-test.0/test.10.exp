# expect/tcl code to test the dds parser and scanner
# jhrg
#
# $Log: test.10.exp,v $
# Revision 1.5  1997/03/27 18:20:07  jimg
# Update for version 2.13
#
# Revision 1.4  1996/05/14 15:41:33  jimg
# These changes have already been checked in once before. However, I
# corrupted the source repository and restored it from a 5/9/96 backup
# tape. The previous version's log entry should cover the changes.
#
# Revision 1.3  1995/12/06  21:58:47  jimg
# Removed `List List' variables.
#
# Revision 1.2  1995/01/19  22:05:20  jimg
# Fixed for new class hierarchy.
#
# Revision 1.1  1994/12/21  17:01:26  jimg
# Added these to the testsuite.
#

global comp_output		# contains output from dds-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_name' is the name of the das input file for this test.

set test_name test.10

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "Status from parser: 0
DDS failed semantic check
DDS failed full semantic check
Dataset {
} ;
In the dataset descriptor object:
`structure {
        Int32 i;
        int32 i;
    } test;'
is not a valid declaration.
The variable `i' is used more than once in Structure `test'

A dataset must have a name
A dataset must have a name"

dds-test_start p $srcdir$test_name

#send_user "comp_output: $comp_output\n"
#send_user "test_out: $test_out\n"
#send_user "Result of compare: [string compare $test_out $comp_output]\n"
#send_user "Length of test_out: [string length $test_out]\n"
#send_user "Length of comp_output: [string length $comp_output]\n"
#
#set test_out [string trim $test_out]
#set comp_output [string trim $comp_output]
#
#send_user "Result of compare: [string compare $test_out $comp_output]\n"
#send_user "Length of test_out: [string length $test_out]\n"
#send_user "Length of comp_output: [string length $comp_output]\n"
#send_user "Result of first: [string first $test_out $comp_output]\n"
#send_user "Result of last: [string last $test_out $comp_output]\n"

if ![string compare $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    xfail "$test_name"
}


