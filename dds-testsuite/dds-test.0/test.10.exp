# expect/tcl code to test the dds parser and scanner
# jhrg
#
# $Log: test.10.exp,v $
# Revision 1.1  1994/12/21 17:01:26  jimg
# Added these to the testsuite.
#

global comp_output		# contains output from dds-test_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

# The variable `test_name' is the name of the das input file for this test.

set test_name test.10

# The variable `test_out' is a string that contains the text that should be
# stored in comp_output by das-test_start. The two strings should match
# exactly.

set test_out "Status from parser: 1
DDS past semantic check
DDS past full semantic check
Dataset {
    List List Int32 i\[10\]\[20\];
    Sequence {
        Str name;
        Int32 age;
    } person;
    Structure {
        Int32 j;
        Int32 i;
        Structure {
            Int32 i;
            Float64 f\[10\];
        } data;
        List Str folks;
    } exp;
    Function {
     INDEPENDENT:
        Float64 time;
     DEPENDENT:
        Float64 temp\[200\];
        Structure {
            Float64 sal;
            Float64 o2;
        } bio;
    } measure;
    Grid {
     ARRAY:
        Float64 g\[10\]\[10\]\[10\];
     MAPS:
        Float64 lat\[10\];
        Float64 lon\[10\];
        Float64 weirdness\[10\];
    } strange;
} data6;
The variable \`i\' is used more than once in Structure \`test\'
The variable \`i\' is used more than once in Sequence \`test2\'
The variable \`f\' is used more than once in Function \`test3\'
Grid map variable \`f\' conflicts with the grid array name in grid \`test4\'"

dds-test_start p $srcdir$test_name

if ![string compare $test_out $comp_output] { # check comp_output
    pass "$test_name"
} else {
    fail "$test_name"
}


