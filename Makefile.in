# $Id: Makefile.in,v 1.3 1994/09/23 14:47:54 jimg Exp $

@SET_MAKE@

# Set makefile variables, some with values supplid by configure 
# DEFS gets the `-D' defines that describe what a particular system has
# or doesn't have.

PROG= das-test dds-test
CFLAGS = -g -I$(DODS_ROOT)/include
CXXFLAGS = -g -DUSE_LIBGXX_INLINES -I$(DODS_ROOT)/include -IMap -IStack -I.
LDFLAGS = -g -L$(DODS_ROOT)/lib
LFLAGS=-8
YFLAGS=-d
DODS_ROOT=../..
DEFS = @DEFS@
LIBS = -lg++map -lg++stack @LIBS@

# Set the instalation directories; prefix can be set on the command line
# during Makefile construction with `./configure --prefix /my/choice'

prefix = ../..
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
includedir = $(prefix)/include
manext = 1
mandir = $(prefix)/man/man$(manext)

INSTALLMAN = man

SHELL = /bin/sh
srcdir = @srcdir@
VPATH = @srcdir@

# testsuite specifics
RUNTEST= runtest
RUNTESTFLAGS= #--all --verbose

# names of key programs

LN_S = @LN_S@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
YACC = bison# @YACC@
LEX = flex# @LEX@
TYPEAR = ar
RANLIB = @RANLIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

DAS_GRAM_OBJS=lex.das.o das.tab.o
DDS_GRAM_OBJS=lex.dds.o dds.tab.o

DASSRCS=AttrTable.cc DAS.cc
DASOBJS=AttrTable.o DAS.o $(DAS_GRAM_OBJS)

DDSSRCS=DDS.cc
DDSOBJS=DDS.o $(TYPEOBJS) $(DDS_GRAM_OBJS) 

TYPESRCS=BaseType.cc Byte.cc Int32.cc Float64.cc Str.cc Url.cc \
         List.cc Array.cc Structure.cc Sequence.cc Function.cc Grid.cc util.cc
TYPEOBJS=BaseType.o Byte.o Int32.o Float64.o Str.o Url.o \
	 List.o Array.o Structure.o Sequence.o Function.o Grid.o util.o

SPACE=$(DODS_ROOT)/lib/Space.o

all: das-test dds-test

# Build the test drivers

das-test:  $(DASOBJS) das-test.o
	$(CXX) $(LDFLAGS) -o das-test $(DASOBJS) $(SPACE) das-test.o $(LIBS)

dds-test:   $(DDSOBJS) dds-test.o
	$(CXX) $(LDFLAGS) -o dds-test $(DDSOBJS) $(SPACE) dds-test.o $(LIBS)

#type-test: $(DDSOBJS) type-test.o
#	$(CXX) $(LDFLAGS) -o type-test $(DDSOBJS) $(SPACE) type-test.o $(LIBS)

# Build the DAS scanner (a C object module compiled with C++)

lex.das.c: das.lex das.tab.c das.tab.h
	$(LEX) $(LFLAGS) -Pdas das.lex

lex.das.o: lex.das.c
	$(CXX) $(CXXFLAGS) -c lex.das.c -o lex.das.o

# Build the DAS parser
# Note that awk is used to add a param to dasparse().

das.tab.c das.tab.h: das.y
	$(YACC) $(YFLAGS) -p das das.y
	$(AWK) -f munge-das.awk das.tab.c > tmp
	mv tmp das.tab.c

das.tab.o: das.tab.c		# build using C++ compiler
	$(CXX) $(CXXFLAGS) -c das.tab.c -o das.tab.o

# Build the DDS Scanner.

lex.dds.c: dds.lex dds.tab.c dds.tab.h
	$(LEX) $(LFLAGS) -Pdds dds.lex

lex.dds.o: lex.dds.c
	$(CXX) $(CXXFLAGS) -c lex.dds.c -o lex.dds.o

# Build the DDS parser

dds.tab.c dds.tab.h: dds.y
	$(YACC) $(YFLAGS) -p dds dds.y
	$(AWK) -f munge-dds.awk dds.tab.c > tmp
	mv tmp dds.tab.c

dds.tab.o: dds.tab.c		# build using C++ compiler
	$(CXX) $(CXXFLAGS) -c dds.tab.c -o dds.tab.o

# Standard targets with some customization for das-test and dds-test

Makefile: ${srcdir}/Makefile.in
	${SHELL} config.status
	make depend

check:	site.exp all
	rootme=`pwd`; export rootme; \
	${RUNTEST} ${RUNTESTFLAGS} --tool das-test DASTEST=das-test \
	--srcdir das-testsuite
	rootme=`pwd`; export rootme; \
	${RUNTEST} ${RUNTESTFLAGS} --tool dds-test DDSTEST=dds-test \
	--srcdir dds-testsuite

site.exp: ./config.status Makefile
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp

	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" \
	      > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" \
	      >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "## Above variables are generated by configure. Do Not Edit ##" \
	      >> ./tmp0
	@cat ./tmp0 > site.exp
	@cat site.bak \
	     | sed -e '1,/^## Above variables are.*##/ d' >> site.exp
	-@rm -f ./tmp?

clean:	
	-rm -f *.o *.sum *.log *~ core
	-rm -f lex.das.c das.tab.c das.tab.h space.raw
	-rm -f $(PROG)
	-rm -f symtab

distclean: clean
	-rm -f config.status Makefile
	-rm -f site.exp

depend: 
	makedepend -- $(CXXFLAGS) -I/usr/local/lib/g++-include -- \
	$(DASSRCS) $(DDSSRCS) $(TYPESRCS) das-test.cc dds-test.cc 

# DO NOT DELETE THIS LINE -- make depend depends on it.
